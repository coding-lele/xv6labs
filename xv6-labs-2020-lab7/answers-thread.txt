insert() 函数中的 e->next = n; *p = e;这两条语句在有竞争情况时会导致上述情况。
因为当两个线程同时向同一个桶添加 key 时，有可能会出现竞争，使得某个 key 丢失。向哈希表中插入结点分为两步：e->next = (*p)->next 和 (*p)->next = e ，比如，当线程 1 和 2 同时向桶 *p 插入 key 时，线程 1 执行了 e1->next = (*p)->next 后被调度走，接着线程 2 执行 e2->next = (*p)->next 和 (*p)->next = e2 ，最后调度回线程 1 完成 (*p)->next = e1 ，此时e2 结点就被丢失了（也就是e1->next = n; e2->next = n; *p = e2; *p = e1;这样的执行序列）。
